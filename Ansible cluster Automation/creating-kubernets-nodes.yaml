# Creating simple Kubernets cluster nodes #1 Master & 1 workernode
---
- name : Creating Kubernets cluster Nodes 
  hosts: localhost 

  vars:  
    keypair: Linux-amazon
    instance_type: t2.micro
    image: ami-0440d3b780d96b29d
    wait: yes
    group: Kubernets-sg
    count: 1
    region: us-east-1
    security_group: Kubernets-security group
    vpc_id: vpc-0c9769badb50cef8d
  
#Security group pors
# allows http 80 & SSh , 8080 for exposing backend
# The ports required for a Kubernetes deployment are:

# 2379/tcp: Kubernetes etcd server client API (on master nodes in multi-master deployments)

# 2380/tcp: Kubernetes etcd server client API (on master nodes in multi-master deployments)

# 6443/tcp: Kubernetes API server (master nodes)

# 8090/tcp: Platform Agent (master and worker nodes)

# 8091/tcp: Platform API Server (operator node)

# 8472/udp: Flannel overlay network, VxLAN backend (master and worker nodes)

# 10250/tcp: Kubernetes kubelet API server (master and worker nodes)

# 10251/tcp: Kubernetes kube-scheduler (on master nodes in multi-master deployments)

# 10252/tcp: Kubernetes kube-controller-manager (on master nodes in multi-master deployments)

# 10255/tcp: Kubernetes kubelet API server for read-only access with no authentication (master and worker nodes)


  tasks:
    - name: Create Kuberents security group 
      amazon.aws.ec2_security_group:
        name: Kubernets-sg
        description: sg for Kubernets allow Kubernets ports & other
        vpc_id: "{{vpc_id}}"
        rules:
        - proto: tcp
            ports:
              - 80
              - 22
              - 8080
              - 2379
              - 2380 
              - 6443
              - 8090
              - 8091
              - 8472
              - 10250
              - 10251
              - 10252
              - 10255
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 80

    - name: Create Kubernets Master Instnace 
      amazon.aws.ec2_instance: 
      name: "Kuberents Master" 
      state: running
      key_name: "{{keypair}}"
      instance_type: "{{instance_type}}"
      security_group: "{{security_group}}""
      image_id: "{{image}}"
      
    - name: Create Kubernets Worker Instnace 
      amazon.aws.ec2_instance: 
      name: "Kuberents Worker" 
      state: running
      key_name: "{{keypair}}"
      instance_type: "{{instance_type}}"
      security_group: "{{security_group}}""
      image_id: "{{image}}"
    
    

